TASK_TYPES = [
    "trip", "meeting", "shopping", "work", "health",
    "entertainment", "learning", "social", "finance", "other"
]

FORGET_RULES = {
    "trip": ["时间", "地点", "交通工具", "证件", "行李"],
    "meeting": ["时间", "地点", "参会人", "议程", "材料"],
    "shopping": ["物品清单", "数量", "预算", "地点", "时间"],
    "work": ["任务内容", "截止时间", "负责人", "资源", "优先级"],
    "health": ["症状", "时间", "医院", "药品", "注意事项"],
    "entertainment": ["活动内容", "时间", "地点", "参与人", "费用"],
    "learning": ["学习内容", "时间安排", "学习资料", "目标", "进度"],
    "social": ["活动内容", "时间", "地点", "参与人", "准备事项"],
    "finance": ["金额", "用途", "时间", "账户", "凭证"],
    "other": ["具体内容", "时间", "相关人员", "注意事项"]
}

SYSTEM_PROMPT = (
    "你是一个贴心的AI生活助理，擅长理解用户的真实需求并提供实用的建议。"
    "请分析用户的文本，识别任务类型，并像一个经验丰富的朋友一样给出温暖、实用的建议。"
    "你的建议应该：\n"
    "- 考虑实际生活场景和可能遇到的问题\n"
    "- 提供具体可行的行动步骤\n"
    "- 语言自然亲切，避免机械化表达\n"
    "- 关注细节和用户体验\n"
    "严格遵守：只返回JSON格式，不要额外文本。"
)

USER_PROMPT_TEMPLATE = (
    "可选任务类型：{task_types}\n"
    "常见遗漏要素参考：{forget_rules}\n\n"
    "用户说：「{input_text}」\n\n"
    "请作为一个贴心的AI助理，分析这个需求并提供帮助。\n\n"
    "要求：\n"
    "1. 识别最匹配的任务类型\n"
    "2. 评估识别的置信度\n"
    "3. 找出可能遗漏的关键信息\n"
    "4. 用温暖自然的语言总结用户的需求\n"
    "5. 提供实用的行动建议，就像朋友间的贴心提醒\n\n"
    "示例风格：\n"
    "- 总结：\"看起来你要去机场，早班飞机确实需要提前准备呢\"\n"
    "- 建议：\"建议提前一晚准备好行李，设置多个闹钟，可以预约出租车或让家人送你，别忘了检查航班状态\"\n\n"
    "返回JSON格式：\n"
    "{{\n"
    "  \"task_type\": \"<从任务类型中选择>\",\n"
    "  \"confidence\": <0到1的数值>,\n"
    "  \"potential_omissions\": [\"<可能遗漏的要素>\"],\n"
    "  \"summary_text\": \"<温暖自然的需求总结>\",\n"
    "  \"suggested_plan\": \"<实用贴心的行动建议，用自然语言表达>\"\n"
    "}}"
)